{"version":3,"sources":["webpack:///src/app/careers/careers-jobs/careers-jobs.component.ts","webpack:///src/app/careers/careers-jobs/careers-jobs.component.html","webpack:///src/app/careers/careers-jobs/dialog-job-dialog.html","webpack:///src/app/careers/careers-main/careers-main.component.ts","webpack:///src/app/careers/careers-main/careers-main.component.html","webpack:///src/app/careers/careers-open/careers-open.component.ts","webpack:///src/app/careers/careers-open/careers-open.component.html","webpack:///src/app/careers/careers.component.ts","webpack:///src/app/careers/careers.component.html","webpack:///src/app/careers/careers.module.ts"],"names":["CareersJobsComponent","translate","dialog","breakpointObserver","bError","bMobile","jobs","POSITION","LOCATION","LEVEL","JOBDESCRIPTION","PARAGRAPH","ROLE","CANDIDATE","SPAN","observe","subscribe","result","matches","index","dialogRef","open","DialogJobDialog","width","height","data","position","location","level","jobdescription","role","candidate","afterOpened","console","log","afterClosed","get","res","selector","templateUrl","styleUrls","paragraphs","close","CareersMainComponent","CareersOpenComponent","CareersComponent","wowService","init","routes","path","component","CareersModule","forChild","declarations","imports","entryComponents"],"mappings":"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","file":"careers-careers-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nimport { Ci18nJob } from 'src/app/shared/models/ci18n-job';\nimport { Ci18nParagraph } from 'src/app/shared/models/ci18n-paragraph';\n\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nexport interface DialogData {\n  position: string;\n  location: string;\n  level: string;\n  jobdescription: [];\n  role: [];\n  candidate: [];\n}\n\n@Component({\n  selector: 'app-careers-jobs',\n  templateUrl: './careers-jobs.component.html',\n  styleUrls: ['./careers-jobs.component.scss']\n})\nexport class CareersJobsComponent implements OnInit {\n\n  public bError = false;\n  public bMobile = false;\n\n  public jobs: Ci18nJob[] = [{\n    POSITION: 'Loading...',\n    LOCATION: 'Loading...',\n    LEVEL: 'Loading...',\n    JOBDESCRIPTION: {\n      PARAGRAPH: 'Loading...'\n    },\n    ROLE:  {\n      PARAGRAPH: 'Loading...'\n    },\n    CANDIDATE:  {\n      SPAN: 'Loading...',\n      PARAGRAPH: 'Loading...'\n    },\n  }];\n\n\n  constructor(public translate: TranslateService, public dialog: MatDialog, breakpointObserver: BreakpointObserver) {\n    breakpointObserver.observe('(max-width: 575px)').subscribe(result => {\n      this.bMobile = result.matches;\n    });\n  }\n\n  openDialog(index: number): void {\n    const dialogRef = this.dialog.open(DialogJobDialog, {\n      width: 'calc(100% - 60px)',\n      height: 'calc(100% - 60px)',\n      data: {index: index, position: this.jobs[index].POSITION,\n            location: this.jobs[index].LOCATION,\n            level: this.jobs[index].LEVEL,\n            jobdescription: this.jobs[index].JOBDESCRIPTION,\n            role: this.jobs[index].ROLE,\n            candidate: this.jobs[index].CANDIDATE\n      }\n    });\n\n    dialogRef.afterOpened().subscribe(result => {\n      console.log('The dialog was opened');\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  ngOnInit() {\n\n\n    this.translate.get('CAREERS.JOBS.JOB').subscribe((res: Ci18nJob[] | string) => {\n      if (typeof(res) === 'string') {\n        this.bError = true;\n        this.jobs = [{\n          POSITION: 'Cannot get translation!',\n          LOCATION: 'Cannot get translation!',\n          LEVEL: 'Cannot get translation!',\n          JOBDESCRIPTION: {\n            PARAGRAPH: 'Cannot get translation!'\n          },\n          ROLE:  {\n            PARAGRAPH: 'Cannot get translation!'\n          },\n          CANDIDATE:  {\n            SPAN: 'Cannot get translation!',\n            PARAGRAPH: 'Cannot get translation!'\n          }\n      }];\n      } else {\n        this.jobs = res as Ci18nJob[];\n      }\n    });\n\n  }\n\n}\n\n\n@Component({\n  selector: 'dialog-job-dialog',\n  templateUrl: './dialog-job-dialog.html',\n  styleUrls: ['./dialog-job-dialog.scss']\n})\nexport class DialogJobDialog {\n\n  public bError = false;\n\n  public paragraphs: Ci18nParagraph[] = [{\n    PARAGRAPH: 'Loading...',\n  }];\n\n  constructor(\n    public translate: TranslateService,\n    public dialogRef: MatDialogRef<DialogJobDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.translate.get('CAREERS.JOBS.GENERAL.ABOUT-US.DESCRIPTION').subscribe((res: Ci18nParagraph[] | string) => {\n      if (typeof(res) === 'string') {\n        this.bError = true;\n        this.paragraphs = [{\n          PARAGRAPH: 'Cannot get translation!'\n      }];\n      } else {\n        this.paragraphs = res as Ci18nParagraph[];\n      }\n    });\n  }\n\n}\n","<section id=\"careers-jobs\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center pb-4\">\n        <h2>{{ 'CAREERS.JOBS.TITLE' | translate}}</h2>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!bMobile; else mobile\">\n      <ng-container *ngFor=\"let job of jobs; let i=index\">\n        <div class=\"col-10 mx-auto job-posting p-5 mb-4 wow zoomIn\" (click)=\"openDialog(i)\">\n          <div class=\"d-flex justify-content-between\">\n            <h4>{{ job.POSITION }}</h4>\n            <div class=\"job-location d-flex\">\n              <img src=\"assets/images/careers/location.svg\" alt=\"location pin\" class=\"mr-2 mt-n2 h-auto\">\n              <h5>{{ job.LOCATION }}</h5>\n            </div>\n          </div>\n          <p><span>{{ job.LEVEL}}</span></p>\n        </div>\n      </ng-container>\n    </div>\n    <ng-template #mobile>\n      <div class=\"row\">\n        <ng-container *ngFor=\"let job of jobs; let i=index\">\n          <div class=\"col-10 mx-auto job-posting p-5 mb-4 wow zoomIn\" (click)=\"openDialog(i)\">\n              <h4>{{ job.POSITION }}</h4>\n            <p><span>{{ job.LEVEL}}</span></p>\n          </div>\n        </ng-container>\n      </div>\n    </ng-template>\n  </div>\n</section>\n","<section id=\"job\" class=\"job\">\n  <mat-dialog-content>\n\n    <div class=\"container-fluid\">\n      <div class=\"row job-top\">\n        <div class=\"col-12 mx-auto\">\n          <mat-dialog-actions align=\"end\">\n            <button mat-button mat-dialog-close>X</button>\n          </mat-dialog-actions>\n        </div>\n        <div class=\"col-11 col-md-10 col-lg-9 mx-auto py-5\">\n          <h2>{{data.position}}</h2>\n          <h5><i>{{ data.level }}</i></h5>\n          <div class=\"job-location d-flex pt-3\">\n            <img src=\"assets/images/careers/location.svg\" alt=\"location pin\" class=\"mr-2 mt-n2\">\n            <h6><i>{{ data.location }}</i></h6>\n          </div>\n        </div>\n      </div>\n      <div class=\"row job-description pt-5\">\n        <div class=\"col-11 col-md-10 col-lg-9 mx-auto\">\n          <h3>{{ 'CAREERS.JOBS.GENERAL.ABOUT-US.TITLE' | translate }}</h3>\n          <p *ngFor=\"let paragraph of paragraphs\">{{ paragraph.PARAGRAPH }}</p>\n          <h3 class=\"pt-4\">{{ 'CAREERS.JOBS.GENERAL.JOB-DESCRIPTION.TITLE' | translate}}</h3>\n          <p *ngFor=\"let description of data.jobdescription\">{{description.PARAGRAPH}}</p>\n          <h3 class=\"pt-4\">{{ 'CAREERS.JOBS.GENERAL.ROLE.TITLE' | translate}}</h3>\n          <ul>\n            <li *ngFor=\"let description of data.role\">\n            {{description.PARAGRAPH}}\n            </li>\n          </ul>\n          <h3 class=\"pt-4\">{{ 'CAREERS.JOBS.GENERAL.CANDIDATES.TITLE' | translate}}</h3>\n          <ul>\n          <li *ngFor=\"let description of data.candidate\">\n            <b>{{description.SPAN}}</b>  {{description.PARAGRAPH}}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"row apply-info mt-5 py-5\">\n        <div class=\"col-11 col-md-10 col-lg-7 mx-auto py-5 text-center\">\n          <h2>{{ 'CAREERS.JOBS.GENERAL.APPLY.TITLE' | translate}} </h2>\n          <p>{{ 'CAREERS.JOBS.GENERAL.APPLY.SUBTITLE' | translate}} </p>\n          <h4 class=\"pt-2\">{{ 'CAREERS.JOBS.GENERAL.APPLY.EMAIL-US' | translate}}<a href=\"mailto: {{ 'CAREERS.JOBS.GENERAL.APPLY.EMAIL' | translate}} \"> {{ 'CAREERS.JOBS.GENERAL.APPLY.EMAIL' | translate}}</a></h4>\n        </div>\n      </div>\n    </div>\n  </mat-dialog-content>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-careers-main',\n  templateUrl: './careers-main.component.html',\n  styleUrls: ['./careers-main.component.scss']\n})\nexport class CareersMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n\n  }\n\n}\n","<section id=\"careers-main\" class=\"careers-main\">\n  <div class=\"container-fluid d-flex align-items-center align-items-md-end\">\n    <div class=\"w-100\">\n      <div class=\"row\">\n        <div class=\"col-10 col-md-12 mx-auto text-center\">\n          <h1 class=\"wow tada\" data-wow-duration=\"2s\" data-wow-delay=\"0.25s\">{{ 'CAREERS.MAIN.TITLE' |  translate }}</h1>\n          <h6>{{ 'CAREERS.MAIN.SUBTITLE' |  translate }}</h6>\n        </div>\n      </div>\n      <div class=\"row pt-4 pb-5\">\n        <div class=\"col-11 col-md-9 col-lg-7 main-image mx-auto\">\n          <img src=\"assets/images/careers/jobs.jpg\" alt=\"woman on left sitting at a desk while waving. man on right standing and holding a coffee cup while waving\">\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-careers-open',\n  templateUrl: './careers-open.component.html',\n  styleUrls: ['./careers-open.component.scss']\n})\nexport class CareersOpenComponent implements OnInit {\n\n  public bMobile = false;\n\n  constructor(breakpointObserver: BreakpointObserver) {\n    breakpointObserver.observe('(max-width: 575px)').subscribe(result => {\n      this.bMobile = result.matches;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<section id=\"careers-open\" class=\"careers-open\">\n  <div class=\"container-fluid\">\n    <div class=\"row d-flex align-items-center justify-content-center\" *ngIf=\"!bMobile; else mobile\">\n      <div class=\"col-4 open-image\">\n        <img src=\"assets/images/careers/jobs-contact.jpg\" alt=\"smiling man sitting cross legged on the ground with a laptop\">\n      </div>\n      <div class=\"col-5 offset-1\">\n        <h2>{{ 'CAREERS.OPEN.TITLE' | translate}}</h2>\n        <h6>{{ 'CAREERS.OPEN.SUBTITLE' | translate}} <a href=\"mailto: {{ 'CAREERS.OPEN.EMAIL' | translate}}\">{{ 'CAREERS.OPEN.EMAIL' | translate}}</a></h6>\n      </div>\n    </div>\n    <ng-template #mobile>\n      <div class=\"row d-flex align-items-center justify-content-center\">\n        <div class=\"col-10 mx-auto open-image mb-5\">\n          <img src=\"assets/images/careers/jobs-contact.jpg\" alt=\"smiling man sitting cross legged on the ground with a laptop\">\n        </div>\n        <div class=\"col-10 mx-auto\">\n          <h2>{{ 'CAREERS.OPEN.TITLE' | translate}}</h2>\n          <h6>{{ 'CAREERS.OPEN.SUBTITLE' | translate}} <a href=\"mailto: {{ 'CAREERS.OPEN.EMAIL' | translate}}\">{{ 'CAREERS.OPEN.EMAIL' | translate}}</a></h6>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { NgwWowService } from 'ngx-wow';\n\n@Component({\n  selector: 'app-careers',\n  templateUrl: './careers.component.html',\n  styleUrls: ['./careers.component.scss']\n})\nexport class CareersComponent implements OnInit {\n\n  constructor(private wowService: NgwWowService) { }\n\n  ngOnInit() {\n    this.wowService.init();\n  }\n\n  reset(){\nthis.wowService.init();\n}\n\n}\n\n","<app-header></app-header>\n<app-careers-main></app-careers-main>\n<app-careers-jobs></app-careers-jobs>\n<app-careers-open></app-careers-open>\n<app-footer></app-footer>\n","import { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CareersComponent } from './careers.component';\n\n// 3rd party\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CareersMainComponent } from './careers-main/careers-main.component';\nimport { CareersJobsComponent, DialogJobDialog } from './careers-jobs/careers-jobs.component';\nimport { CareersOpenComponent } from './careers-open/careers-open.component';\nimport {RouterModule, Routes} from \"@angular/router\";\n\n// Routes\nconst routes: Routes = [\n  {\n    path: '',\n    component: CareersComponent\n  }\n];\n\n\n@NgModule({\n  declarations: [CareersComponent,\n    CareersMainComponent,\n    CareersJobsComponent,\n    CareersOpenComponent,\n    DialogJobDialog],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    // 3rd party\n    NgxPageScrollModule,\n    FontAwesomeModule,\n  ],\n  entryComponents: [DialogJobDialog]\n})\nexport class CareersModule { }\n"]}